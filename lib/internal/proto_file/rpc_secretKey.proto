syntax = "proto3";

import "rpc_service.proto";
import "github.com/mwitkow/go-proto-validators@v0.3.2/validator.proto";

package base.common.rpc_cent;


option go_package = "com.youyu.api/app/rpc/proto_files";

service SecretKeyApi {
  // 用户登录状态Token
  rpc BindTokenToUser(user) returns (user){}
  rpc ForTokenGetBindUser(user) returns (user){}
  rpc DeleteBindUser(user) returns (rpc_service.null){}
  // 保存第三方网站登录状态的token
  rpc BindWechatToken(wechat_token_info) returns (user){}
  rpc ForWechatTokenGetInfo(user) returns (wechat_token_info){}
  // Csrf Token
  // Rsa key
  rpc GetPublicKey(rsa_key) returns (rsa_key){}
  rpc GetPrivateKey(rsa_key) returns (rsa_key) {}
  // 保存验证码
  rpc BindUserVcCode(user_vc_code) returns (rpc_service.null) {}
  // 通过绑定的号码获取验证码
  rpc GetUserVcCode(user_vc_code) returns (user_vc_code) {}
}

message user {
  // 回传的提示码
  int32 code = 1;
  // 回传使用的提示信息
  string message = 2;
  // 用户id
  int32 uid = 3;
  // 过期时间
  int64 exp_time = 4;
  // 返回绑定的token
  string token = 5;
}

message rsa_key {
  // 公钥
  string public_key = 1;
  // 私钥
  string private_key = 2;
  // 客户端id,与私钥绑定，获取私钥使用
  string client_id = 3;
}

message wechat_token_info {
  string openid = 1;
  string session_key = 2;
  string unionid = 3;
  int32 errcode = 4;
  string errmsg = 5;
}

message user_vc_code {
  string bind_info = 3 [
    (validator.field) = {string_not_empty:true}
  ];
  string vc_code = 4 [
    (validator.field) = {length_eq:6}
  ];
}