package main

import (
	"com.youyu.api/app/rpc/client"
	rpc "com.youyu.api/app/rpc/proto_files"
	"com.youyu.api/common/config"
	"com.youyu.api/common/router"
	"context"
	"github.com/gin-contrib/logger"
	"github.com/gin-gonic/gin"
	"io"
	"os"
)

func main() {
	// 初始化配置
	// panic均为应用不能正常运行的情况
	var business config.Config = &config.BusinessConfig{}
	businessConf, err := business.GetConfig()
	if err != nil {
		panic(err)
	}
	result := businessConf.(*config.BusinessConfig)
	// 连接配置中心获取配置
	clientE,conn,err := client.GetCentApiRpcServerLink(result)
	if err != nil {
		panic(err)
	}
	defer conn.Close()
	resultByte, err := clientE.GetRpcServerConfFile(context.Background(), &rpc.Null{})
	if err != nil {
		panic(err)
	}
	generated := config.AutoGenerated{}
	resultI,err := generated.Unmarshal(resultByte.Data)
	if err != nil {
		panic(err)
	}
	resultAG := resultI.(*config.AutoGenerated)
	stream, err := clientE.PushLogStream(context.Background())
	if err != nil {
		panic(err)
	}
	defer stream.CloseSend()
	r := gin.New()
	gin.DefaultWriter = io.MultiWriter(&client.IOW{
		CentRpcPushStream: stream,
		FileName:          "gin.log",
	},os.Stdout)
	// json日志
	r.Use(logger.SetLogger())
	router.InitRouter(r)
	_ = r.Run(resultAG.Server.IPAddr + ":" + resultAG.Server.Port)
}
